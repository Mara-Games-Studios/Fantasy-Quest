//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/MainMenuInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MainMenuInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MainMenuInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MainMenuInput"",
    ""maps"": [
        {
            ""name"": ""UI"",
            ""id"": ""0b024a39-fb94-4e08-949b-2af6acd5c045"",
            ""actions"": [
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""939cc961-e3f7-4265-9064-2be6d46a88d9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""276e8338-8ba3-4686-b0f7-83f6978b63ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IndicateUp"",
                    ""type"": ""Button"",
                    ""id"": ""10ec9584-d611-4fed-8bea-115d5d9c2998"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IndicateDown"",
                    ""type"": ""Button"",
                    ""id"": ""270f817b-0f19-41e3-8bff-030ab6a5b124"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuClick"",
                    ""type"": ""Button"",
                    ""id"": ""01b28373-6345-4402-914e-3565a9a828c9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Exit"",
                    ""type"": ""Button"",
                    ""id"": ""8961d12c-c102-4c65-96e5-456c9f9a62fe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IndicateLeft"",
                    ""type"": ""Button"",
                    ""id"": ""ecb0adfd-bbab-4656-a9ca-1fec687fb0f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IndicateRight"",
                    ""type"": ""Button"",
                    ""id"": ""dd79b9ea-b886-456f-a77d-24ef19d0074b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8ab57952-9213-4303-994d-1bb697c0608d"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""053f23ab-aa7d-48c2-a436-bbaa8dd2e15b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04885fb0-8640-4e5a-9ea5-41652c3b836e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IndicateDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88500960-aea2-4814-9731-1b989d5f5c03"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IndicateUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d307298-04fb-4f92-8af5-d9a84c09a600"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ac3036a-a871-4a21-b87a-92c6c75ac03a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9f99c58-cde2-465e-a936-7c23b1e0c6d7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IndicateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68256739-f268-4330-a9e1-f1398a0385e0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IndicateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Point = m_UI.FindAction("Point", throwIfNotFound: true);
        m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
        m_UI_IndicateUp = m_UI.FindAction("IndicateUp", throwIfNotFound: true);
        m_UI_IndicateDown = m_UI.FindAction("IndicateDown", throwIfNotFound: true);
        m_UI_MenuClick = m_UI.FindAction("MenuClick", throwIfNotFound: true);
        m_UI_Exit = m_UI.FindAction("Exit", throwIfNotFound: true);
        m_UI_IndicateLeft = m_UI.FindAction("IndicateLeft", throwIfNotFound: true);
        m_UI_IndicateRight = m_UI.FindAction("IndicateRight", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Point;
    private readonly InputAction m_UI_Click;
    private readonly InputAction m_UI_IndicateUp;
    private readonly InputAction m_UI_IndicateDown;
    private readonly InputAction m_UI_MenuClick;
    private readonly InputAction m_UI_Exit;
    private readonly InputAction m_UI_IndicateLeft;
    private readonly InputAction m_UI_IndicateRight;
    public struct UIActions
    {
        private @MainMenuInput m_Wrapper;
        public UIActions(@MainMenuInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Point => m_Wrapper.m_UI_Point;
        public InputAction @Click => m_Wrapper.m_UI_Click;
        public InputAction @IndicateUp => m_Wrapper.m_UI_IndicateUp;
        public InputAction @IndicateDown => m_Wrapper.m_UI_IndicateDown;
        public InputAction @MenuClick => m_Wrapper.m_UI_MenuClick;
        public InputAction @Exit => m_Wrapper.m_UI_Exit;
        public InputAction @IndicateLeft => m_Wrapper.m_UI_IndicateLeft;
        public InputAction @IndicateRight => m_Wrapper.m_UI_IndicateRight;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Point.started += instance.OnPoint;
            @Point.performed += instance.OnPoint;
            @Point.canceled += instance.OnPoint;
            @Click.started += instance.OnClick;
            @Click.performed += instance.OnClick;
            @Click.canceled += instance.OnClick;
            @IndicateUp.started += instance.OnIndicateUp;
            @IndicateUp.performed += instance.OnIndicateUp;
            @IndicateUp.canceled += instance.OnIndicateUp;
            @IndicateDown.started += instance.OnIndicateDown;
            @IndicateDown.performed += instance.OnIndicateDown;
            @IndicateDown.canceled += instance.OnIndicateDown;
            @MenuClick.started += instance.OnMenuClick;
            @MenuClick.performed += instance.OnMenuClick;
            @MenuClick.canceled += instance.OnMenuClick;
            @Exit.started += instance.OnExit;
            @Exit.performed += instance.OnExit;
            @Exit.canceled += instance.OnExit;
            @IndicateLeft.started += instance.OnIndicateLeft;
            @IndicateLeft.performed += instance.OnIndicateLeft;
            @IndicateLeft.canceled += instance.OnIndicateLeft;
            @IndicateRight.started += instance.OnIndicateRight;
            @IndicateRight.performed += instance.OnIndicateRight;
            @IndicateRight.canceled += instance.OnIndicateRight;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Point.started -= instance.OnPoint;
            @Point.performed -= instance.OnPoint;
            @Point.canceled -= instance.OnPoint;
            @Click.started -= instance.OnClick;
            @Click.performed -= instance.OnClick;
            @Click.canceled -= instance.OnClick;
            @IndicateUp.started -= instance.OnIndicateUp;
            @IndicateUp.performed -= instance.OnIndicateUp;
            @IndicateUp.canceled -= instance.OnIndicateUp;
            @IndicateDown.started -= instance.OnIndicateDown;
            @IndicateDown.performed -= instance.OnIndicateDown;
            @IndicateDown.canceled -= instance.OnIndicateDown;
            @MenuClick.started -= instance.OnMenuClick;
            @MenuClick.performed -= instance.OnMenuClick;
            @MenuClick.canceled -= instance.OnMenuClick;
            @Exit.started -= instance.OnExit;
            @Exit.performed -= instance.OnExit;
            @Exit.canceled -= instance.OnExit;
            @IndicateLeft.started -= instance.OnIndicateLeft;
            @IndicateLeft.performed -= instance.OnIndicateLeft;
            @IndicateLeft.canceled -= instance.OnIndicateLeft;
            @IndicateRight.started -= instance.OnIndicateRight;
            @IndicateRight.performed -= instance.OnIndicateRight;
            @IndicateRight.canceled -= instance.OnIndicateRight;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IUIActions
    {
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnIndicateUp(InputAction.CallbackContext context);
        void OnIndicateDown(InputAction.CallbackContext context);
        void OnMenuClick(InputAction.CallbackContext context);
        void OnExit(InputAction.CallbackContext context);
        void OnIndicateLeft(InputAction.CallbackContext context);
        void OnIndicateRight(InputAction.CallbackContext context);
    }
}
